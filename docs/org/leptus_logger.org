#+AUTHOR:   Sina Samavati
#+EMAIL:    sina.samv@gmail.com
#+TITLE:    leptus_logger

* Module
  :PROPERTIES:
  :CUSTOM_ID: module
  :END:

  leptus_logger

  This module is used for adding/removing log handlers and sending log events.

* Functions
  :PROPERTIES:
  :CUSTOM_ID: functions
  :END:

** add_handler/2
   :PROPERTIES:
   :CUSTOM_ID: add_handler-2
   :END:

   Adds a new log handler to the gen_event manager leptus_log_man.

   #+BEGIN_SRC
   add_handler(Handler, Args) ->
       ok | {'EXIT', any()} | any()

   Handler = atom() | {atom(), any()}
   Args = any()
   #+END_SRC

** delete_handler/2
   :PROPERTIES:
   :CUSTOM_ID: delete_handler-2
   :END:

   Removes a log handler from the gen_event manager leptus_log_man.

   #+BEGIN_SRC
   delete_handler(Handler, Args) ->
       any() | {error, module_not_found} | {'EXIT', any()}

   Handler = atom() | {atom(), any()}
   Args = any()
   #+END_SRC

** access_log/1
   :PROPERTIES:
   :CUSTOM_ID: access_log-2
   :END:

   Sends the event notification ~{access_log, LogData}~ to the event manager
   leptus_log_man.

   #+BEGIN_SRC
   access_log(LogData) -> ok

   LogData = #log_data {
                 request_time :: calendar:datetime(),
                 response_time :: undefined | calendar:datetime(),
                 request_line :: string(),
                 ip :: inet:ip_address(),
                 version :: atom(),
                 method :: binary(),
                 uri :: binary(),
                 headers :: [{binary(), iodata()}],
                 status :: non_neg_integer(),
                 content_length :: non_neg_integer()
             }
   #+END_SRC

   The ~#log_data~ record is defined in ~include/leptus_logger.hrl".

** format/2
   :PROPERTIES:
   :CUSTOM_ID: format-2
   :END:

   Produces a log line with a given format.

   #+BEGIN_SRC
   format(Fmt, LogData) -> string()

   Fmt = string()
   LogData = #log_data {
                 request_time :: calendar:datetime(),
                 response_time :: undefined | calendar:datetime(),
                 request_line :: string(),
                 ip :: inet:ip_address(),
                 version :: atom(),
                 method :: binary(),
                 uri :: binary(),
                 headers :: [{binary(), iodata()}],
                 status :: non_neg_integer(),
                 content_length :: non_neg_integer()
             }
   #+END_SRC

   The ~#log_data~ record is defined in ~include/leptus_logger.hrl".

   Example:
   #+BEGIN_SRC
   > format("~h ~l ~u ~t \"~r\" ~s ~B", LogData).
   "127.0.0.1 - - [11/Jun/2014:03:07:25 +0200] \"GET /b?p=2 HTTP/1.1\" 200 8-3"
   #+END_SRC
