#+AUTHOR:   Sina Samavati
#+EMAIL:    sina.samv@gmail.com
#+TITLE:    leptus_utils

* Module
  :PROPERTIES:
  :CUSTOM_ID: module
  :END:

  leptus_utils

  This module provides a number of useful functions.

* Functions
  :PROPERTIES:
  :CUSTOM_ID: functions
  :END:

** priv_dir/1
   :PROPERTIES:
   :CUSTOM_ID: priv_dir-1
   :END:

   Finds the path to the priv directory in an application.

   #+BEGIN_SRC
   priv_dir(App) -> Dir | {error, bad_name}

   App = atom()
   Dir = file:name_all()
   #+END_SRC

** paginator/1
   :PROPERTIES:
   :CUSTOM_ID: paginator-1
   :END:

   Generates a paginator function for paginating a list of elements.

   #+BEGIN_SRC
   paginator(NElementPerPage) -> fun((Page, Objects) -> Objects)

   NElementPerPage = Page = non_neg_integer()
   Objects = [any()]
   #+END_SRC

   Example:

   #+BEGIN_SRC
   1> Page = paginator(3).
   2> Page(2, [1,2,3,4,5,6,7,8,9]).
   [4,5,6]
   #+END_SRC

** paginate/3
   :PROPERTIES:
   :CUSTOM_ID: paginate-3
   :END:

   Paginates a list of objects.

   #+BEGIN_SRC
   paginate(NElementPerPage, Objects, Page) -> Objects

   NElementPerPage = Page = non_neg_integer()
   Objects = [any()]
   #+END_SRC

** listener_bucket/1
   :PROPERTIES:
   :CUSTOM_ID: listener_bucket-1
   :END:

   Returns a running listener bucket that includes Handlers, Options and
   started date-time.

   #+BEGIN_SRC
   listener_bucket(Listener) -> Bucket | not_found

   Listener = http | https | spdy
   Bucket = #listener_bucket{}
   #+END_SRC

** listener_handlers/1
   :PROPERTIES:
   :CUSTOM_ID: listener_handlers-1
   :END:

   Returns handlers of a running listener.

   #+BEGIN_SRC
   listener_handlers(Listener) -> Handlers | {error, not_found}

   Listener = http | https | spdy
   Handlers = [{module(), State :: any()}]
   #+END_SRC

** print_listener_info/1
   :PROPERTIES:
   :CUSTOM_ID: print_listener_info-1
   :END:

   Prints a running listener information, such as handlers, routes and allowed
   methods.

   #+BEGIN_SRC
   print_listener_info(Listener) -> ok

   Listener = http | https | spdy
   #+END_SRC
